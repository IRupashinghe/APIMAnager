---
# Variable configuration.
- import_tasks: variables.yml

# Setup/install tasks.
- import_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- import_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Ensure MySQL is started and enabled on boot.
  service: "name={{ mysql_daemon }} state=started enabled=yes"

# MySQL secure installation
- name: remove the test database
  mysql_db: name=test state=absent
  tags: secure

- name: Removes anonymous user account for localhost
  mysql_user:
    name: ''
    host: localhost
    state: absent
  tags: secure

- name: Disallow root login remotely
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false
  tags: secure

- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_pass }}
  with_items:
   - 127.0.0.1
   - ::1
   - localhost
  tags: secure

# DB setup, create users and grant permission
- name: Create MySQL databases.
  mysql_db:
    name: "{{ item }}"
    state: "present"
  with_items: "{{ mysql_databases }}"
  tags: create_db

- name: Create database users
  mysql_user: 
   user: "{{ item }}" 
   password: "{{ mysql_users_pass }}"
   host: "%"
   priv: "*.*:ALL" 
   state: "present"
  with_items: "{{ mysql_users }}"
  tags: create_users

  
- import_tasks: table.yml
  when: table_creation == true


## Copy database dump file to remote host and restore it to database 'my_db'
#- name: Copy database dump file
#  copy:
#    src: dump.sql.bz2
#    dest: /tmp

## DB Restore
#- name: Restore database
#  mysql_db:
#    name: my_db
#    state: import
#    target: /tmp/dump.sql.bz2
